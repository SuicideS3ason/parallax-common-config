variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_TLS_CERTDIR: ""
  GIT_SUBMODULE_STRATEGY: recursive
services:
  - docker:dind
image: docker:latest
lint:
  image: node:12.2.0-alpine
  stage: prepare
  script:
    - yarn install --silent --frozen-lockfile --ignore-scripts
    - npm run lint:prod
  only:
    - master
    - dev
    - merge_requests

build-dependency:
  stage: prepare
  script:
    - mkdir -p ~/.docker/
    - echo "{\"experimental\":\"enabled\"}" >> ~/.docker/config.json
    - PACKAGE_MD5=`md5sum yarn.lock | awk '{ print $1 }'`
    - login_docker
    - NOT_AVAILABLE=`docker manifest inspect ${IMAGE_DEPENDENCY}:${PACKAGE_MD5} > /dev/null ; echo $?`
    - >
      if [ ${NOT_AVAILABLE} == "1" ]; then
        docker build -t ${IMAGE_DEPENDENCY}:${PACKAGE_MD5} -f ./common/Dockerfile.npm-dependencies .
        docker tag ${IMAGE_DEPENDENCY}:${PACKAGE_MD5} ${IMAGE_DEPENDENCY}:latest
        docker push ${IMAGE_DEPENDENCY}:${PACKAGE_MD5}
      else
        echo "Dependency image already present: ${PACKAGE_MD5}"
      fi
  only:
    refs:
      - dev
      - test
      - master

.functions: &common |
  # Functions
  function init_helm() {
      mkdir -p /etc/deploy
      echo -n ${DOCKER_AUTH_CONFIG} | base64 -d > /etc/deploy/sa.json
      gcloud auth activate-service-account --key-file /etc/deploy/sa.json --project=${GKE_PROJECT}
      gcloud container clusters get-credentials ${GKE_CLUSTER_NAME} --zone ${GKE_ZONE} --project ${GKE_PROJECT}
      helm init
  }
  function login_docker() {
      echo -n "$DOCKER_AUTH_CONFIG" | base64 -d | docker login -u _json_key --password-stdin https://eu.gcr.io
  }
before_script:
  - *common